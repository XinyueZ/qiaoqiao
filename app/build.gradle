apply plugin: 'com.android.application'
apply plugin: 'realm-android'

def buildNumber = 'bld' + (System.env.BUILD_NUMBER ?: 'SNAPSHOT')

android {

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    configurations {
        all*.exclude module: 'support-v4'
        all*.exclude module: 'mediarouter-v7'
    }

    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration.getAt("compileSdkVersion")
    buildToolsVersion globalConfiguration.getAt("buildToolsVersion")

    defaultConfig {
        multiDexEnabled = true
        vectorDrawables.useSupportLibrary = true

        versionName globalConfiguration.getAt("versionName")
        versionCode globalConfiguration.getAt("versionCode")
        applicationId globalConfiguration.getAt("applicationId")
        minSdkVersion globalConfiguration.getAt("minSdkVersion")
        targetSdkVersion globalConfiguration.getAt("targetSdkVersion")
    }


    dataBinding {
        enabled = true
    }

    flavorDimensions "development", "release"

    productFlavors {
        dev {
            dimension "development"
            applicationId project.APP_DEV_APPLICATIONID
        }
        live {
            dimension "release"
            applicationId project.APP_APPLICATIONID
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        htmlReport false
        abortOnError false
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/INDEX.LIST'
        exclude 'META-INF/MANIFEST.MF'
        exclude 'com/google/cloud/project.properties'
        exclude 'META-INF/io.netty.versions.properties'
    }


    dexOptions {
        preDexLibraries true
        javaMaxHeapSize project.JAVA_MAX_HEAP_SIZE
    }
}


dependencies {

    rootProject.appDependencies.each {
        add(it.configuration, it.dependency, it.options)
    }

}

// Rename final apks
//android.applicationVariants.all { variant ->
//    variant.outputs.each { output ->
//        output.outputFile = new File(
//                output.outputFile.parent, output.outputFile.name.replace("_Android", "")
//                .replace(".apk", "-${android.defaultConfig.versionName}${buildNumber}.apk"))
//    }
//}
